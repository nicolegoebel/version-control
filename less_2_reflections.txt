What happens when you initalize a repo? Why do you need to do it?
- when you initialize a repo it adds a .git file which keeps track of your versions.

How is staging area diffrent from working dir and repo?  What value does it offer?
- the staging area prepares the files to be committed. It allows you to view which files you are going to commit, before preparing the instructuions/comment.

What are some situations when branches would be helpful in keeping your history organized? How would branches help?
- branches help when you want to experiment with something without losing previous work. Might be moving onto a new peice of work - doing something different. Maybe a new feature. Good for organizing when sharing something publicly. To have a development or experimental or unique feature brach. Stuff you expect to break - not production quality. Compartmentalize the work.

Once update is complete, you can combine with master using git merge. Or update the master.

How do diagrams help visualize branch structure?
-

How to combine changes from multiple branches into single version.
git merge master other_branch
git show commit_id - to show changs of a commit compared to its parent, without having to know the parent id.

What is the result of merging 2 branches together?  Why do we represent it in a digram the way we do?
- brings all changes together, after testing them separately.

What are the pros and cons of Gits automatic merging versus always doing merges manually?
- manual merges allows you to check and ensure that you are merging what you want/think you are merging. If it was automated all the time, Git may have to guess at some of the merge and therefore could be incorrect, introducing errors.


