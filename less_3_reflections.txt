Q1. When would you want to use a remote repo rather than keeping all your work local?
A1. when you are not working on your own machine, or the cloud.

Q2. Why might you want to always pull changs manually rather than have Git automatically stay up to date with your remote repo?
A2. You may not want your changes to go public, and therefore should decide when you would like that to happen.

Q3. Describe differences between forks, clones and branches?  When do you use one instead of another?
forks - when you want a copy of another persons repo on GitHub, to turn up on your GitHub page
clones - when you want to clone a GitHub repo on your local machine (or remotely)
branch - only occur within a single repo.

Q4. What is the benefit of having a copy of the lsat known state of the remote stored locally?
A4. A local copy of last known state allows you to see what new changes may have been made.

Q5. How would you collaborate without Git/Hub? What would be easier?  What would be harder?
A5. I might collaborate with Dropbox sharing. But this is harder to keep track of the order of changes and merges. One should only allow a single person to work on the file at a time, rather than simultaneously!  However, it is more straightforward for people who do not understand how to use GitHub/Git.

Q6. When would you want to make changes in a separate branch rather than directly in master? What benefits does each approach have?
A6. Making changes in a separate branch allows for experimentation, whereas continuing along master provides more continuity.
